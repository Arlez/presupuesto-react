{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helper.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","propType","PropTypes","string","isRequired","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","min","Formulario","guardarGasto","guardarCreargasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad7955fa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return(\r\n        <p className=\"alert alert-danger error\">{mensaje}</p>\r\n    )\r\n}\r\n \r\nError.propType = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import React, {Fragment, useState} from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pregunta = ( {guardarPresupuesto, guardarRestante, actualizarPregunta} ) => {\r\n\r\n    //definir state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //funcion que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad(parseInt(e.target.value), 10);\r\n    }\r\n\r\n    //submit para definir presupuerto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        if(cantidad < 1 || isNaN(cantidad)){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        \r\n        //si pasa validacion\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Agrega tu Presupuesto</h2>\r\n\r\n            { error ? <Error mensaje=\"El presupuesto es incorrecto\"/> : null }\r\n\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Agrega tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                    min=\"0\"\r\n                />\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"definir presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pregunta;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport shortid  from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({guardarGasto, guardarCreargasto}) => {\r\n\r\n    //definir state\r\n    const [ nombre, guardarNombre ] = useState('');\r\n    const [ cantidad, guardarCantidad ] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const agregarGasto = e=> {\r\n        e.preventDefault();\r\n        //validar\r\n        if(cantidad < 1 || isNaN(cantidad) || nombre.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        //pasar el componente principal\r\n        guardarGasto(gasto);\r\n        guardarCreargasto(true);\r\n\r\n        //resetear formulario\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos aquÃ­</h2>\r\n\r\n            { error ? <Error mensaje=\"Ambos campos son obligatorios\"/> : null}\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 10000\"\r\n                    value={cantidad}\r\n                    min=\"0\"\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value, 10))}\r\n                />\r\n            </div>\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCreargasto: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gasto = ({gasto}) => (\r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre} \r\n            <span className=\"gasto\"> {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n);\r\n \r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => (\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        { gastos.map( gasto => (\r\n            <Gasto\r\n                key={gasto.id}\r\n                gasto={gasto}\r\n            />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nListado.propTypes = { \r\n    gastos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if((presupuesto / 4) > restante){\r\n        clase = 'alert alert-danger';\r\n    }else if((presupuesto / 2) > restante ){\r\n        clase = 'alert alert-warning';\r\n    }else{\r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n}","import React, { Fragment } from 'react';\r\nimport {revisarPresupuesto} from '../helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ControlPresupuesto = ({ presupuesto, restante}) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n\r\n      );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n \r\nexport default ControlPresupuesto;","import React, { useState, useEffect } from \"react\";\nimport Pregunta from \"./components/Pregunta\";\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  //definir state\n  const [ presupuesto, guardarPresupuesto ] = useState(0);\n  const [ restante, guardarRestante ] = useState(0);\n  const [ mostrarpregunta, actualizarPregunta] = useState(true);\n  const [ gastos, guardarGastos ] = useState([]);\n  const [ gasto, guardarGasto ] = useState({});\n  const [ crearGasto, guardarCreargasto] = useState(false);\n\n  //useEffect que actualiza el restante\n  useEffect(() => {\n\n    //agrega el nuevo presupuesto\n    if(crearGasto){\n      guardarGastos([...gastos, gasto]);\n    }\n\n    //resta al presupuesto actual\n    const presupuestoRestante = restante - gasto.cantidad;\n    guardarRestante(presupuestoRestante);\n\n    //reset a false\n    guardarCreargasto(false);\n\n  }, [gasto]);\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n      </header>\n\n      <div className=\"contenido-principal contenido\">\n          { mostrarpregunta ? (\n            <Pregunta \n              guardarPresupuesto={ guardarPresupuesto } \n              guardarRestante={ guardarRestante }\n              actualizarPregunta={actualizarPregunta}\n            />\n          ) : (  \n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario\n                  guardarGasto={guardarGasto}\n                  guardarCreargasto={guardarCreargasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Listado\n                  gastos={gastos}\n                />\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n              </div>\n            </div>\n          )}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}